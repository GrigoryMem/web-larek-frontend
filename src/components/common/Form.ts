import {Component} from "../base/Component";
import {IEvents} from "../base/events";
import {ensureElement} from "../../utils/utils";

interface IFormState {
    valid: boolean; // —Ñ–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞ –∏–ª–∏ –Ω–µ—Ç (true/false)
    errors: string | string[]; // –º–∞—Å—Å–∏–≤ –æ—à–∏–±–æ–∫ (–∏–ª–∏ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –ø–æ–∑–∂–µ)
}


// T ‚Äî —ç—Ç–æ –æ–±–æ–±—â—ë–Ω–Ω—ã–π (generic) —Ç–∏–ø, –Ω–∞–ø—Ä–∏–º–µ—Ä:


// interface OrderFormData {
//   email: string;
//   phone: string;
// }
// –¢–æ–≥–¥–∞ Form<OrderFormData> –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ —É —Ñ–æ—Ä–º—ã –µ—Å—Ç—å –ø–æ–ª—è email –∏ phone.

export class Form<T> extends Component<IFormState> {
    protected _submit: HTMLButtonElement;
    protected _errors: HTMLElement;

    constructor(protected container: HTMLFormElement, protected events: IEvents) {
        super(container);
        // —Åontainer ‚Äî HTML-—Ñ–æ—Ä–º–∞ (<form>...</form>), —Å –∫–æ—Ç–æ—Ä–æ–π –º—ã —Ä–∞–±–æ—Ç–∞–µ–º.
        this._submit = ensureElement<HTMLButtonElement>('button', this.container);
        // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ (<button type="submit">) –≤ —Ñ–æ—Ä–º–µ.–ï—Å–ª–∏ –µ—ë –Ω–µ—Ç ‚Äî ensureElement –≤—ã–±—Ä–æ—Å–∏—Ç –æ—à–∏–±–∫—É.
        this._errors = ensureElement<HTMLElement>('.form__errors', this.container); 
        // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç, –∫—É–¥–∞ –º—ã –±—É–¥–µ–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏
// –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏–∏
// –°–ª—É—à–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.container.addEventListener('input', (e: Event) => {
            const target = e.target as HTMLInputElement;
            const field = target.name as keyof T; //–∏–º—è –ø–æ–ª—è
            const value = target.value; //  –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ input –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–æ—à–ª–æ —Å–æ–±—ã—Ç–∏–µ
            //  —Å–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∏ —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º —ç–º–º–∏—Ç–µ—Ä—É
            this.onInputChange(field, value); 
        });
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
        this.container.addEventListener('submit', (e: Event) => {
            e.preventDefault();
            this.events.emit(`${this.container.name}:submit`);
        });
    }

    protected onInputChange(field: keyof T, value: string) {
        // // –°–æ–∑–¥–∞—ë—Ç —Å–æ–±—ã—Ç–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: order.email:change, –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç:
        // {
        //     field: 'email',
        //     value: 'test@example.com'
        //   }
        this.events.emit(`${this.container.name}.${String(field)}:change`, {
            field,
            value
        });
    }

    set valid(value: boolean) {
        this._submit.disabled = !value;
        // valid	–ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É? (true/false)
    }

    set errors(value: string) {
        this.setText(this._errors, value);
        // —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ (–ø—É—Å—Ç–æ–π –∏–ª–∏ —Å —Ç–µ–∫—Å—Ç–æ–º)
    }

    render(state: Partial<T> & IFormState) {
        const {valid, errors, ...inputs} = state;
        // –ó–∞–±–∏—Ä–∞–µ–º valid –∏ errors –∏–∑ –æ–±—ä–µ–∫—Ç–∞ state
        // –ü—Ä–∏—á–∏–Ω–∞ : valid –∏ errors ‚Äî —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
        // –û–Ω–∏ –Ω–µ —Å–≤—è–∑–∞–Ω—ã —Å —Å–∞–º–∏–º–∏ –ø–æ–ª—è–º–∏ —Ñ–æ—Ä–º—ã, —ç—Ç–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã:

        // –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ (email, phone, –∏ —Ç.–ø.) –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ–±—ä–µ–∫—Ç inputs
        // –ü—Ä–∏—á–∏–Ω–∞: –ü–æ–ª–µ–π email, phone, password, name –∏ —Ç.–ø. –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ. 
        // –û–Ω–∏ –æ–ø–∏—Å–∞–Ω—ã –≤ —Ç–∏–ø–µ T, –Ω–æ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º—ã –º–æ–≥—É—Ç –∏–º–µ—Ç—å —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—è.
        // –ú—ã –∏—Ö –∫–æ–ø–∏—Ä—É–µ–º –≤ this, —á—Ç–æ–±—ã:
        // –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ this.email, this.phone –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞;
        // –ø–µ—Ä–µ–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è).

        // üëâ –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã valid –∏ errors –ø–µ—Ä–µ–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ, –∞ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ.
        // valid ‚Äî —Ñ–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞?
        // errors ‚Äî –æ—à–∏–±–∫–∏,
        // inputs ‚Äî –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã (email, phone –∏ —Ç.–¥.).
        super.render({valid, errors}); //–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ 
        // –¢–æ –µ—Å—Ç—å –æ–Ω –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ (valid, errors) –≤ —Ç–µ–∫—É—â–∏–π –æ–±—ä–µ–∫—Ç this –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.
        // –¢–æ –µ—Å—Ç—å –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ valid –∏ errors –≤ —Ç–µ–∫—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä (this).
        // –ù–æ —Å–∞–º –º–µ—Ç–æ–¥ Component.render(...) –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø–æ–ª—è–º–∏ —Ñ–æ—Ä–º—ã –Ω–∞–ø—Ä—è–º—É—é! 
        // –û–Ω –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ ‚Äî –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –≤ Form –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞ –Ω–∏–∂–µ.
        Object.assign(this, inputs); //–£—Å—Ç–∞–Ω–æ–≤–∫—É –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π 
      
        // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
        return this.container;

    }
}


